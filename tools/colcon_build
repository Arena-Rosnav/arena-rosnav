#! /usr/bin/env bash

. "${ARENA_WS_DIR:-.}/src/arena/arena-rosnav/tools/source.bash" || return $?

_SKIP_OLD=${SKIP_OLD:-$([[ "${*}" == *"--packages-"* ]] || echo 1 )}

BUILD_BASE='build'
INSTALL_BASE='install'
BASE_PATHS=(
    "${ARENA_WS_DIR}/src"
)

OLD_PACKAGES=()

if [ "${_SKIP_OLD}" = 1 ]; then
    function recursive_mtime(){
        find "$1" \! -type l -printf "%T@\n"  | sort | tail -1 | cut -d. -f1
    }

    while read -r target
    do
        
        package=$(echo "$target" | cut -f1)
        src_path=$(echo "$target" | cut -f2)

        if  [ -n "${package}" ] &&
            [ -d "${INSTALL_BASE}/${package}" ] &&
            [ "$(recursive_mtime "${INSTALL_BASE}/${package}")" -ge "$(recursive_mtime "${src_path}")" ];
        then
            OLD_PACKAGES+=("$package")
        fi

    done < <(colcon list --base-paths "${BASE_PATHS[*]}");
fi
unset _SKIP_OLD

ARGS=(
    "--build-base ${BUILD_BASE}"
    "--install-base ${INSTALL_BASE}"
    "--base-paths ${BASE_PATHS[*]}"
    "--symlink-install"
    "--continue-on-error"
    "--packages-skip ${OLD_PACKAGES[*]}"
    "--cmake-args '-DPython3_ROOT_DIR=$(cd "${ARENA_WS_DIR}/src/arena/arena-rosnav" && poetry env info -p) -DBUILD_TESTING=OFF'"
)

eval "colcon build ${ARGS[*]} $*"

. "${ARENA_WS_DIR}/src/arena/arena-rosnav/tools/source.bash"
